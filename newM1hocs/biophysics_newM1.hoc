begintemplate CustomBiophys
public biophys, distribute

// Define a procedure to distribute parameters according to their specifications

proc applyDecayDistr() {local newValue, constant, dist localobj secList
    
    strdef param,stmp
    secList = $o1
    param = $s2
    constant = $4
    forsec secList {
        for (x,0) {
            dist = distance(x)
            newValue = exp(dist*constant)*$3
            sprint(stmp,"%s = %g", param, newValue)
            execute(stmp)
        }
    }
}



proc distribute(){local x localobj sl
        strdef stmp,distfunc,mech
        sl = $o1
        mech = $s2
        distfunc = $s3
        sprint(distfunc,"%%s %s(%%f) = %s",mech, distfunc)
        forsec sl for(x) {
            sprint (stmp,distfunc,secname(),x,distance(x))
            execute(stmp)
        }
}








proc biophys() {
    
    forsec $o1.all {
        insert pas

    }

    forsec $o1.somatic {
        insert CaDynamics_DC0
        insert Ca_HVA2
        insert Ca_LVAst
        insert SKv3_1
        insert SK_E2
        insert K_Pst
        insert K_Tst
        //insert NaTg //include when generalizing?
        insert Ih
         
        
        //ena = 50 // Sodium reversal potential
        ek = -90 // Potassium reversal potential
       
    }

    forsec $o1.axonal {
        insert CaDynamics_DC0
        insert Ca_HVA2
        insert Ca_LVAst
        insert SKv3_1
        insert SK_E2
        insert K_Pst
        insert K_Tst
        //insert NaTg //include when generalizing? for all Excitatory Neurons
        //insert Nap_Et2  //include when generalizing?
    }

    forsec $o1.apical {
        insert CaDynamics_DC0
        insert Ca_HVA2
        insert Ca_LVAst
        //insert NaTg //include when generalizing?
        insert SKv3_1
        insert Ih

        cm = 2 // Overriding global cm for apical sections

    }


    forsec $o1.basal {
        insert CaDynamics_DC0
        insert Ca_HVA2
        insert Ca_LVAst
        insert Ih

        cm = 2 // Example parameter, adjust as needed
    }
    //TODO
    //distribute function
    //Constant values

    
    //forsec $o1.myelinated {
    //    cm = 0.02 // Membrane capacitance specific to myelinated sections
    //}

    forsec $o1.all {
        Ra = 100
        g_pas = 5.3926647384073322e-05
        e_pas = -75.862421167964129

    }

// Assuming $o1 is your cell object and it has sections named all, apical, axonal, basal, and somatic

forsec $o1.all {
    Ra = 100
    g_pas = 4.705194648149981e-05 // Updated from JSON
    e_pas = -79.60374956146968 // Updated from JSON
}

forsec $o1.apical{
    cm = 2
    //ena = 50
    ek = -90
    for (x,0) {
        gamma_CaDynamics_DC0 = 0.04517010601950254 // Updated from JSON
        gSKv3_1bar_SKv3_1  = 0.0018178286052065377 // Updated from JSON
        gCa_HVAbar_Ca_HVA2 = 3.4636229677800608e-06 // Updated from JSON
        gCa_LVAstbar_Ca_LVAst = 0.0009854947364163842 // Updated from JSON
        gIhbar_Ih = 2.61134874202907e-05 // Updated based on "gIhbar_Ih.somadend" from JSON
    }   
}

forsec $o1.axonal{
    cm = 1
    //ena = 50
    ek = -90
    for (x,0) {
        gK_Pstbar_K_Pst = 0.9980114074992784 // Updated from JSON
        gK_Tstbar_K_Tst = 0.06402749081198544 // Remains the same
        gSKv3_1bar_SKv3_1 = 0.2196590456561799 // Updated from JSON
        gCa_HVAbar_Ca_HVA2 = 0.0005097148014324321 // Updated from JSON
        gCa_LVAstbar_Ca_LVAst = 0.0009394854482623271 // Remains the same
        gSK_E2bar_SK_E2 =  0.09680866067066746 // Updated from JSON
        decay_CaDynamics_DC0 = 285.46128321068517 // Updated from JSON
        gamma_CaDynamics_DC0 =  0.01275232112975029 // Remains the same
    }   
}

forsec $o1.basal{
    cm = 2
    for (x,0) {
        gamma_CaDynamics_DC0 = 0.04883429216702996 // Updated from JSON
        gCa_HVAbar_Ca_HVA2 = 7.449816437034735e-05 // Updated from JSON
        gCa_LVAstbar_Ca_LVAst =  0.0007435299945503686 // Remains the same
        gIhbar_Ih = 2.61134874202907e-05 // Same as apical, based on "gIhbar_Ih.somadend" from JSON
    }
}

forsec $o1.somatic{
    cm = 1
    //ena = 50
    ek = -90
    for (x,0) {
        gK_Pstbar_K_Pst = 0.10031922891367806 // Updated from JSON
        gK_Tstbar_K_Tst = 0.01315314265442069 // Remains the same
        gSKv3_1bar_SKv3_1 = 0.3882917753860594 // Remains the same
        gCa_HVAbar_Ca_HVA2 = 0.0008353459573991519 // Updated from JSON
        gCa_LVAstbar_Ca_LVAst = 0.00021537640631977598 // Remains the same
        gSK_E2bar_SK_E2 = 0.02023934993186524 // Remains the same
        decay_CaDynamics_DC0 = 282.09663415587323 // Updated from JSON
        gamma_CaDynamics_DC0 = 0.022091065777470664 // Remains the same
        gIhbar_Ih = 2.61134874202907e-05 // Same as apical, based on "gIhbar_Ih.somadend" from JSON
    }   
}
    distribute($o1.apical,"gIhbar_Ih","(-0.869600 + 2.087000*exp((%g-0.000000)*4.9710877962221885e-06))*4.9710877962221885e-06")



}

endtemplate CustomBiophys
